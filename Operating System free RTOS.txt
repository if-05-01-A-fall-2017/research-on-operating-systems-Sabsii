FreeRTOS is a popular real-time operating system kernel for embedded devices that has been ported to 35 microcontrollers. It is designed to be small and simple.
The kernel itself consists of only three C files. The Code ist mostly written in C.
FreeRTOS provides methods for multiple threads or tasks, mutexes, semaphores and software timers. A tick-less mode is provided for low power applications. 
Thread priorities are supported. FreeRTOS applications can be completely statically allocated. 

Alternatively RTOS objects can be dynamically allocated with five schemes of memory allocation provided:
	allocate only;
    	allocate and free with a very simple, fast, algorithm;
   	a more complex but fast allocate and free algorithm with memory coalescence;
   	an alternative to the more complex scheme that includes memory coalescence that allows a heap to be broken across multiple memory areas.
   	and C library allocate and free with some mutual exclusion protection.

There are none of the more advanced features typically found in operating systems like Linux or Microsoft Windows, such as device drivers, advanced memory management, 
user accounts, and networking. The emphasis is on compactness and speed of execution. FreeRTOS can be thought of as a 'thread library' rather than an 'operating system', 
although command line interface and POSIX-like I/O abstraction add-ons are available.
